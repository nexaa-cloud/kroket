name: Build and Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tag: ${{ steps.tag.outputs.TAG }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.148.2'
          extended: true

      - name: Build site
        run: hugo --minify

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tag with date and time
        id: tag
        run: echo "TAG=$(date +'%Y-%m-%d %H:%M' | sed 's/ /-/g' | sed 's/:/./g')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/kroket:latest
            ghcr.io/${{ github.repository_owner }}/kroket:${{ steps.tag.outputs.TAG }}

  terraform:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache Terraform state
        uses: actions/cache@v4
        with:
          path: ./terraform/terraform.tfstate
          key: terraform-state-${{ github.ref }}
          restore-keys: |
            terraform-state-

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Remove container from terraform.tfstate
        working-directory: ./terraform
        run: terraform state rm nexaa_container.container
        env:
          TF_VAR_nexaa_username: ${{ secrets.NEXAA_USERNAME }}
          TF_VAR_nexaa_password: ${{ secrets.NEXAA_PASSWORD }}

      - name: Terraform Import
        working-directory: ./terraform
        run: terraform import nexaa_container.container nexaa-kroket/kroket-friday
        env:
          TF_VAR_nexaa_username: ${{ secrets.NEXAA_USERNAME }}
          TF_VAR_nexaa_password: ${{ secrets.NEXAA_PASSWORD }}

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan
        env:
          TF_VAR_nexaa_username: ${{ secrets.NEXAA_USERNAME }}
          TF_VAR_nexaa_password: ${{ secrets.NEXAA_PASSWORD }}

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          TF_VAR_nexaa_username: ${{ secrets.NEXAA_USERNAME }}
          TF_VAR_nexaa_password: ${{ secrets.NEXAA_PASSWORD }}
          TF_VAR_container_image: ghcr.io/${{ github.repository_owner }}/kroket:${{ needs.build.outputs.tag }}
